name: Update NSTC Typhoon Data Daily

on:
  schedule:
    # 每 6 小時執行一次 (UTC 時間 00:00, 06:00, 12:00, 18:00)
    # 這對應於台灣時間上午 8:00, 下午 2:00, 晚上 8:00, 凌晨 2:00 (UTC+8)
    - cron: '0 */6 * * *'
  workflow_dispatch: # 允許手動觸發此工作流程

jobs:
  download_and_push_data:
    runs-on: ubuntu-latest # 在一個最新的 Ubuntu Linux 虛擬機上運行這個任務
    steps:
      - name: Checkout repository # 第一步：將您的 GitHub 倉庫程式碼下載到這個虛擬機
        uses: actions/checkout@v3

      - name: Set up Python # 設定 Python 環境
        uses: actions/setup-python@v4
        with:
          python-version: '3.x' # 使用一個最新的 Python 版本

      - name: Install dependencies # 安裝 Python 的 requests 函式庫，用於下載 KML
        run: pip install requests

      - name: Download CSV and KML # 第二步：下載 NSTC 的 CSV 檔案，並從中提取 KML 連結後下載 KML
        run: |
          mkdir -p data # 確保 'data' 目錄存在
          CSV_URL="https://mas.nstc.gov.tw/OPENDATA/GetFile?format=csv&serialno=454&fileodr=1"
          CSV_PATH="data/nstc_typhoon_index.csv"
          KML_PATH="data/typhoon_track.kml"

          echo "Downloading CSV from NSTC..."
          # 使用 curl 下載 CSV 檔案，並禁用 SSL 憑證驗證 (-k 或 --insecure)
          curl -k -o "$CSV_PATH" "$CSV_URL"
          echo "Downloaded CSV to $CSV_PATH"

          echo "Parsing CSV and downloading KML..."
          # 使用 Python 腳本解析 CSV 並下載 KML
          python -c "
import csv
import io
import requests
import os
import sys

csv_path = os.environ.get('CSV_PATH')
kml_path = os.environ.get('KML_PATH')

print(f'Reading CSV from: {csv_path}')
try:
    with open(csv_path, 'r', encoding='utf-8-sig') as f:
        csv_content = f.read()
except FileNotFoundError:
    print(f'Error: CSV file not found at {csv_path}')
    sys.exit(1) # Exit if CSV not found

# 嘗試使用 utf-8-sig 解碼，如果失敗則嘗試 big5
try:
    csv_file = io.StringIO(csv_content)
    reader = csv.reader(csv_file)
    header = next(reader)
except Exception:
    try:
        csv_file = io.StringIO(csv_content.encode('latin-1').decode('big5'))
        reader = csv.reader(csv_file)
        header = next(reader)
    except Exception as e_big5:
        print(f'CSV parsing failed for both UTF-8 and Big5. Error: {e_big5}')
        sys.exit(1) # Exit if CSV parsing fails

data_link_index = -1
description_index = -1

try:
    data_link_index = header.index('資料連結')
    description_index = header.index('說明')
except ValueError:
    print('CSV header missing required columns (資料連結 or 說明).')
    sys.exit(1) # Exit if header columns are missing

kml_data_url = None
for row in reader:
    if len(row) > max(data_link_index, description_index):
        description = row[description_index]
        # 關鍵字搜尋更寬鬆，以防描述文字變化
        if any(keyword in description for keyword in ['颱風路徑', '熱帶氣旋', '預測路徑', 'Typhoon Track', 'Typhoon_KML']):
            kml_data_url = row[data_link_index]
            break

if kml_data_url:
    print(f'Found KML URL: {kml_data_url}')
    try:
        # 下載 KML，並禁用 SSL 憑證驗證 (verify=False)，因為它可能指向 mas.nstc.gov.tw
        kml_response = requests.get(kml_data_url, timeout=30, verify=False)
        kml_response.raise_for_status() # 檢查 HTTP 錯誤
        with open(kml_path, 'w', encoding='utf-8') as f:
            f.write(kml_response.text)
        print(f'Downloaded KML to {kml_path}')
    except Exception as e:
        print(f'Error downloading KML from {kml_data_url}: {e}')
        # 如果 KML 下載失敗，不退出，但會記錄錯誤
        # 確保即使 KML 下載失敗，也不會導致整個 Action 失敗
        # 這樣至少 CSV 會被更新，並且舊的 KML 會被移除
        if os.path.exists(kml_path):
            os.remove(kml_path) # 移除可能不完整的 KML 檔案
else:
    print('No KML URL found in CSV.')
    # 如果沒有找到 KML 連結，確保 KML 檔案被移除，避免提交舊的或空的 KML
    if os.path.exists(kml_path):
        os.remove(kml_path)
"
        env:
          CSV_PATH: ${{ github.workspace }}/data/nstc_typhoon_index.csv
          KML_PATH: ${{ github.workspace }}/data/typhoon_track.kml

      - name: Commit and push changes # 第三步：將下載的 CSV 和 KML 檔案提交回您的 GitHub 倉庫
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # 添加兩個檔案，如果其中一個不存在，git add 不會報錯
          git add data/nstc_typhoon_index.csv data/typhoon_track.kml
          # 只有當有實際變動時才提交，避免不必要的提交歷史
          git diff --staged --quiet || git commit -m "Update NSTC typhoon data (CSV and KML)"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
